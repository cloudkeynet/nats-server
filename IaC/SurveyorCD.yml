AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  EnvironmentName:
    Type: String
    Default: dev
    Description: "Nombre del entorno (dev, staging, prod)"

Resources:
  ##ECR Role
  ECRRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "ECRRepositoryRole-${EnvironmentName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ecr.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "ECRFullAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:CreateRepository"
                  - "ecr:DeleteRepository"
                  - "ecr:DescribeRepositories"
                  - "ecr:BatchGetImage"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:PutImage"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:UploadLayerPart"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:SetRepositoryPolicy"
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "ECRRole-${EnvironmentName}"
  CodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: "SURVEYOR"
      ServiceRole: !ImportValue IAMRole2Arn
      Source:
        Type: "CODEPIPELINE"
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              commands:
                - echo "Logging in to Amazon ECR..."
                - aws ecr get-login-password --region ${AWS::Region} | docker login --username AWS --password-stdin ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/nats-surveyor-${EnvironmentName}
            pre_build:
              commands:
                - echo "Building the Docker image..."
                - docker build --no-cache -t nats-surveyor:latest .
            build:
              commands:
                - echo "Tagging the Docker image..."
                - docker tag nats-surveyor:latest ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/nats-surveyor-${EnvironmentName}:latest
            post_build:
              commands:
                - echo "Pushing the Docker image to ECR..."
                - docker push ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/nats-surveyor-${EnvironmentName}:latest
                - echo "Build completed on `date`"
                - echo "Creating imagedefinitions.json for ECS deployment"
                - printf '[{"name":"nats-surveyor","imageUri":"%s:%s"}]' ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/nats-surveyor-${EnvironmentName} latest > imagedefinitions.json
                - echo "Starting deployment using CodeDeploy"
          artifacts:
            files:
              - imagedefinitions.json
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:7.0"
        ImagePullCredentialsType: "CODEBUILD"
        PrivilegedMode: true
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: "CommitId"
            Type: "PLAINTEXT"
            Value: "latest"
      Artifacts:
        Type: "CODEPIPELINE"
      Cache:
        Type: "NO_CACHE"
      TimeoutInMinutes: 60
      LogsConfig:
        CloudWatchLogs:
          Status: "ENABLED"
      VpcConfig:
        VpcId: !ImportValue VPCId
        Subnets:
          - !ImportValue PrivateSubnet1Id
          - !ImportValue PrivateSubnet2Id
        SecurityGroupIds:
          - !ImportValue SecurityGroupId
  ECRRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: !Sub "nats-surveyor-${EnvironmentName}"
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Eliminar imágenes sin etiqueta después de 30 días",
                "selection": {
                  "tagStatus": "untagged",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 30
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt ECRRole.Arn
            Action:
              - "ecr:BatchGetImage"
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
Outputs:
  ECRRepositoryUri:
    Description: "ECR Repository URI"
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/nats-surveyor-${EnvironmentName}"